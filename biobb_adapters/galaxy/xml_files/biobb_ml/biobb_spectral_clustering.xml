<tool id="biobb_ml_spectral_clustering_ext" name="SpectralClustering" version="3.0.1" >
    <description>: Clusters a given dataset with spectral clustering method.</description>
    <requirements>
        <requirement type="binary">docker</requirement>
    </requirements>
    <command detect_errors="aggressive"><![CDATA[
        
          ln -f -s ${input_dataset_path} ${input_dataset_path}.${input_dataset_path.ext};
        
        #if $config.sele == "option1":
          ln -s -f ${config.properties} ${config.properties}.${config.properties.ext};
        #end if
        docker run --rm -v $__root_dir__/database/files:$__root_dir__/database/files quay.io/biocontainers/biobb_ml:3.0.1--py_0 spectral_clustering
        #if $config.sele == "option1":
          --config ${config.properties}.${config.properties.ext}
        #else if $config.sele == "option2":
          --config '${config.jsonstr}'
        #else if $config.sele == "option4":
          --config "__oc____dq__predictors__dq__:__dq__${config.predictors}__dq__,__dq__clusters__dq__:__dq__${config.clusters}__dq__,__dq__affinity__dq__:__dq__${config.affinity}__dq__,__dq__plots__dq__:__dq__${config.plots}__dq__,__dq__remove_tmp__dq__:__dq__${config.remove_tmp}__dq__,__dq__restart__dq__:__dq__${config.restart}__dq____cc__"
        #end if
        
          --input_dataset_path ${input_dataset_path}.${input_dataset_path.ext}
        
        
          --output_results_path $__root_dir__/database/files/000/$outname_output_results_path
        
          --output_plot_path $__root_dir__/database/files/000/$outname_output_plot_path
        ;          
        #if $config.sele == "option1":
          rm -f ${config.properties}.${config.properties.ext};
        #end if
        
          rm -f ${input_dataset_path}.${input_dataset_path.ext};
        
        
          if test -f $__root_dir__/database/files/000/$outname_output_results_path; then mv $__root_dir__/database/files/000/$outname_output_results_path $output_results_path; fi;
        
          if test -f $__root_dir__/database/files/000/$outname_output_plot_path; then mv $__root_dir__/database/files/000/$outname_output_plot_path $output_plot_path; fi;
        
    ]]>
    </command>
    <inputs>
        
          <param name="input_dataset_path" type="data" format="csv"  optional="False" label="input CSV file" help="Path to the input dataset. Format: [input].csv"/> 
        
        
          <param name="outname_output_results_path" type="text" value="myspectral_clustering.csv" optional="False" label="output CSV name" help="Path to the clustered dataset Format: [output].csv "/>
        
          <param name="outname_output_plot_path" type="text" value="myspectral_clustering.png" optional="True" label="output PNG name" help="Path to the clustering plot Format: [output].png "/>
        
        <conditional name="config">
            <param name="sele" type="select" label="Take tool settings:" help="Select where tool settings are to be read from">
                <option value="option3" selected="true">use defaults</option>
                <option value="option1">from configuration file</option>
                <option value="option2">from JSON string</option>
                <option value="option4"> Manual input</option>
            </param>
            <when value="option1">
                <param name="properties" type="data" format="yml,json" optional="false" label="Configuration file" help="File containing tool settings. See below for the syntax"/>
            </when>
            <when value="option2">
                <param name="jsonstr" type="text" value="{}" optional="false" label="JSON string" help="JSON string containing tool settings. See below for the syntax"/>
            </when>
            <when value="option3">
            </when>
            <when value="option4">
                
                  <param name="predictors" type="text" value="None" label="predictors" help="Features or columns from your dataset you want to use for fitting." optional="false"/>
                
                  
                
                  <param name="affinity" type="select" label="affinity" help="How to construct the affinity matrix.">
                    
                      <option value="nearest_neighbors" 
                      
                      >nearest_neighbors</option>
                    
                      <option value="rbf" 
                      selected="true"
                      >rbf</option>
                    
                      <option value="precomputed" 
                      
                      >precomputed</option>
                    
                      <option value="precomputed_nearest_neighbors" 
                      
                      >precomputed_nearest_neighbors</option>
                    
                    </param>
                
                  <param name="plots" type="text" value="None" label="plots" help="List of dictionaries with all plots you want to generate. Only 2D or 3D plots accepted. Format: [ { &#39;title&#39;: &#39;Plot 1&#39;, &#39;features&#39;: [&#39;feat1&#39;, &#39;feat2&#39;] } ]." optional="false"/>
                
                  <param name="remove_tmp" type="boolean" 
                    checked="true"
                    label="remove_tmp" help="[WF property] Remove temporal files." />
                
                  <param name="restart" type="boolean" 
                    
                    label="restart" help="[WF property] Do not execute if output files exist." />
                
            </when>
        </conditional>
    </inputs>
    <outputs>
        
        <data name="output_results_path" format="csv" label="${outname_output_results_path}"/>
        
        <data name="output_plot_path" format="png" label="${outname_output_plot_path}"/>
        
    </outputs>
    <tests>
        <test>
        </test>
    </tests>    
    <help>
.. class:: infomark
        
Check the syntax for the tool parameters at the original library documentation: https://biobb_ml.readthedocs.io/en/latest

-----

.. image:: http://mmb.irbbarcelona.org/biobb/assets/layouts/layout3/img/logo.png    
    :width: 150

**https://mmb.irbbarcelona.org/biobb**
        
.. image:: https://bioexcel.eu/wp-content/uploads/2019/08/Bioexcel_logo_no_subheading_660px.png
        :width: 150
        
**https://bioexcel.eu**
   </help>

    <citations>
        <citation type="bibtex">
            @misc{githubbiobb,
            author = {Andrio P, Bayarri, G., Hospital A, Gelpi JL},
            year = {2019-20},
            title = {biobb: BioExcel building blocks },
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/bioexcel/biobb_ml},
            }
        </citation>
        <citation type="doi">10.1038/s41597-019-0177-4</citation>
    </citations>
</tool>