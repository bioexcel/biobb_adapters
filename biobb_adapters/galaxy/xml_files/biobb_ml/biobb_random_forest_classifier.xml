<tool id="biobb_ml_random_forest_classifier_ext" name="RandomForestClassifier" version="3.0.1" >
    <description>: Trains and tests a given dataset and saves the model and scaler for a random forest classifier.</description>
    <requirements>
        <requirement type="binary">docker</requirement>
    </requirements>
    <command detect_errors="aggressive"><![CDATA[
        
          ln -f -s ${input_dataset_path} ${input_dataset_path}.${input_dataset_path.ext};
        
        #if $config.sele == "option1":
          ln -s -f ${config.properties} ${config.properties}.${config.properties.ext};
        #end if
        docker run --rm -v $__root_dir__/database/files:$__root_dir__/database/files quay.io/biocontainers/biobb_ml:3.0.1--py_0 random_forest_classifier
        #if $config.sele == "option1":
          --config ${config.properties}.${config.properties.ext}
        #else if $config.sele == "option2":
          --config '${config.jsonstr}'
        #else if $config.sele == "option4":
          --config "__oc____dq__independent_vars__dq__:__dq__${config.independent_vars}__dq__,__dq__target__dq__:__dq__${config.target}__dq__,__dq__n_estimators__dq__:__dq__${config.n_estimators}__dq__,__dq__bootstrap__dq__:__dq__${config.bootstrap}__dq__,__dq__normalize_cm__dq__:__dq__${config.normalize_cm}__dq__,__dq__test_size__dq__:__dq__${config.test_size}__dq____cc__"
        #end if
        
          --input_dataset_path ${input_dataset_path}.${input_dataset_path.ext}
        
        
          --output_model_path $__root_dir__/database/files/000/$outname_output_model_path
        
          --output_test_table_path $__root_dir__/database/files/000/$outname_output_test_table_path
        
          --output_plot_path $__root_dir__/database/files/000/$outname_output_plot_path
        ;          
        #if $config.sele == "option1":
          rm -f ${config.properties}.${config.properties.ext};
        #end if
        
          rm -f ${input_dataset_path}.${input_dataset_path.ext};
        
        
          if test -f $__root_dir__/database/files/000/$outname_output_model_path; then mv $__root_dir__/database/files/000/$outname_output_model_path $output_model_path; fi;
        
          if test -f $__root_dir__/database/files/000/$outname_output_test_table_path; then mv $__root_dir__/database/files/000/$outname_output_test_table_path $output_test_table_path; fi;
        
          if test -f $__root_dir__/database/files/000/$outname_output_plot_path; then mv $__root_dir__/database/files/000/$outname_output_plot_path $output_plot_path; fi;
        
    ]]>
    </command>
    <inputs>
        
          <param name="input_dataset_path" type="data" format="csv"  optional="False" label="input CSV file" help="Path to the input dataset. Format: [input].csv"/> 
        
        
          <param name="outname_output_model_path" type="text" value="myrandom_forest_classifier.pkl" optional="False" label="output PKL name" help="Path to the output model file Format: [output].pkl "/>
        
          <param name="outname_output_test_table_path" type="text" value="myrandom_forest_classifier.csv" optional="True" label="output CSV name" help="Path to the test table file Format: [output].csv "/>
        
          <param name="outname_output_plot_path" type="text" value="myrandom_forest_classifier.png" optional="True" label="output PNG name" help="Path to the statistics plot Format: [output].png "/>
        
        <conditional name="config">
            <param name="sele" type="select" label="Take tool settings:" help="Select where tool settings are to be read from">
                <option value="option3" selected="true">use defaults</option>
                <option value="option1">from configuration file</option>
                <option value="option2">from JSON string</option>
                <option value="option4"> Manual input</option>
            </param>
            <when value="option1">
                <param name="properties" type="data" format="yml,json" optional="false" label="Configuration file" help="File containing tool settings. See below for the syntax"/>
            </when>
            <when value="option2">
                <param name="jsonstr" type="text" value="{}" optional="false" label="JSON string" help="JSON string containing tool settings. See below for the syntax"/>
            </when>
            <when value="option3">
            </when>
            <when value="option4">
                
                  <param name="independent_vars" type="text" value="None" label="independent_vars" help="Independent variables or columns from your dataset you want to train." optional="false"/>
                
                  <param name="target" type="text" value="None" label="target" help="Dependent variable or column from your dataset you want to predict." optional="false"/>
                
                  
                
                  <param name="bootstrap" type="boolean" 
                    checked="true"
                    label="bootstrap" help="Whether bootstrap samples are used when building trees. If False, the whole dataset is used to build each tree." />
                
                  <param name="normalize_cm" type="boolean" 
                    
                    label="normalize_cm" help="Whether or not to normalize the confusion matrix." />
                
                  <param name="test_size" type="integer" value="0.2" 
                     
                           label="test_size" help="Represents the proportion of the dataset to include in the test split. It should be between 0.0 and 1.0." optional="false"/>
                
            </when>
        </conditional>
    </inputs>
    <outputs>
        
        <data name="output_model_path" format="pkl" label="${outname_output_model_path}"/>
        
        <data name="output_test_table_path" format="csv" label="${outname_output_test_table_path}"/>
        
        <data name="output_plot_path" format="png" label="${outname_output_plot_path}"/>
        
    </outputs>
    <tests>
        <test>
        </test>
    </tests>    
    <help>
.. class:: infomark
        
Check the syntax for the tool parameters at the original library documentation: https://biobb_ml.readthedocs.io/en/latest

-----

.. image:: http://mmb.irbbarcelona.org/biobb/assets/layouts/layout3/img/logo.png    
    :width: 150

**https://mmb.irbbarcelona.org/biobb**
        
.. image:: https://bioexcel.eu/wp-content/uploads/2019/08/Bioexcel_logo_no_subheading_660px.png
        :width: 150
        
**https://bioexcel.eu**
   </help>

    <citations>
        <citation type="bibtex">
            @misc{githubbiobb,
            author = {Andrio P, Bayarri, G., Hospital A, Gelpi JL},
            year = {2019-20},
            title = {biobb: BioExcel building blocks },
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/bioexcel/biobb_ml},
            }
        </citation>
        <citation type="doi">10.1038/s41597-019-0177-4</citation>
    </citations>
</tool>