<tool id="biobb_model_fix_backbone_ext" name="FixBackbone" version="3.0.1" >
    <description>: Class to model the missing atoms in the backbone of a PDB structure.</description>
    <requirements>
        <requirement type="docker">quay.io/biocontainers/biobb_model:3.0.1--py_0</requirement>
    </requirements>
    <command detect_errors="aggressive"><![CDATA[
        
          ln -f -s ${input_pdb_path} ${input_pdb_path}.${input_pdb_path.ext};
        
          ln -f -s ${input_fasta_canonical_sequence_path} ${input_fasta_canonical_sequence_path}.${input_fasta_canonical_sequence_path.ext};
        
        #if $config.sele == "option1":
          ln -s -f ${config.properties} ${config.properties}.${config.properties.ext};
        #end if
        docker run --rm -v $__root_dir__/database/files:$__root_dir__/database/files quay.io/biocontainers/biobb_model:3.0.1--py_0 fix_backbone
        #if $config.sele == "option1":
          --config ${config.properties}.${config.properties.ext}
        #else if $config.sele == "option2":
          --config '${config.jsonstr}'
        #else if $config.sele == "option4":
          --config "__oc____dq__add_caps__dq__:__dq__${config.add_caps}__dq____cc__"
        #end if
        
          --input_pdb_path ${input_pdb_path}.${input_pdb_path.ext}
        
          --input_fasta_canonical_sequence_path ${input_fasta_canonical_sequence_path}.${input_fasta_canonical_sequence_path.ext}
        
        
          --output_pdb_path $__root_dir__/database/files/000/$outname_output_pdb_path
        ;          
        #if $config.sele == "option1":
          rm -f ${config.properties}.${config.properties.ext};
        #end if
        
          rm -f ${input_pdb_path}.${input_pdb_path.ext};
        
          rm -f ${input_fasta_canonical_sequence_path}.${input_fasta_canonical_sequence_path.ext};
        
        
          if test -f $__root_dir__/database/files/000/$outname_output_pdb_path; then mv $__root_dir__/database/files/000/$outname_output_pdb_path $output_pdb_path; fi;
        
    ]]>
    </command>
    <inputs>
        
          <param name="input_pdb_path" type="data" format="pdb"  optional="False" label="input PDB file" help="Input PDB file path. Format: [input].pdb"/> 
        
          <param name="input_fasta_canonical_sequence_path" type="data" format="fasta"  optional="False" label="input FASTA file" help="Input FASTA file path. Format: [input].fasta"/> 
        
        
          <param name="outname_output_pdb_path" type="text" value="myfix_backbone.pdb" optional="False" label="output PDB name" help="Output PDB file path Format: [output].pdb "/>
        
        <conditional name="config">
            <param name="sele" type="select" label="Take tool settings:" help="Select where tool settings are to be read from">
                <option value="option3" selected="true">use defaults</option>
                <option value="option1">from configuration file</option>
                <option value="option2">from JSON string</option>
                <option value="option4"> Manual input</option>
            </param>
            <when value="option1">
                <param name="properties" type="data" format="yml,json" optional="false" label="Configuration file" help="File containing tool settings. See below for the syntax"/>
            </when>
            <when value="option2">
                <param name="jsonstr" type="text" value="{}" optional="false" label="JSON string" help="JSON string containing tool settings. See below for the syntax"/>
            </when>
            <when value="option3">
            </when>
            <when value="option4">
                
                  <param name="add_caps" type="boolean" 
                    
                    label="add_caps" help="Add caps to terminal residues." />
                
            </when>
        </conditional>
    </inputs>
    <outputs>
        
        <data name="output_pdb_path" format="pdb" label="${outname_output_pdb_path}"/>
        
    </outputs>
    <tests>
        <test>
        </test>
    </tests>    
    <help>
.. class:: infomark
        
Check the syntax for the tool parameters at the original library documentation: https://biobb_model.readthedocs.io/en/latest

-----

.. image:: http://mmb.irbbarcelona.org/biobb/assets/layouts/layout3/img/logo.png    
    :width: 150

**https://mmb.irbbarcelona.org/biobb**
        
.. image:: https://bioexcel.eu/wp-content/uploads/2019/08/Bioexcel_logo_no_subheading_660px.png
        :width: 150
        
**https://bioexcel.eu**
   </help>

    <citations>
        <citation type="bibtex">
            @misc{githubbiobb,
            author = {Andrio P, Bayarri, G., Hospital A, Gelpi JL},
            year = {2019-20},
            title = {biobb: BioExcel building blocks },
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/bioexcel/biobb_model},
            }
        </citation>
        <citation type="doi">10.1038/s41597-019-0177-4</citation>
    </citations>
</tool>