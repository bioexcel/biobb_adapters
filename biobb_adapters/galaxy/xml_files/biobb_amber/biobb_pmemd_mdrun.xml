<tool id="biobb_amber_pmemd_mdrun_ext" name="PmemdMdrun" version="" >
    <description>: Wrapper of the AmberTools (AMBER MD Package) pmemd tool module.</description>
    <requirements>
        <requirement type="package">biobb_amber</requirement>
    </requirements>
    <command detect_errors="aggressive"><![CDATA[
        
          ln -f -s ${input_top_path} ${input_top_path}.${input_top_path.ext};
        
          ln -f -s ${input_crd_path} ${input_crd_path}.${input_crd_path.ext};
        
          ln -f -s ${input_mdin_path} ${input_mdin_path}.${input_mdin_path.ext};
        
          ln -f -s ${input_cpin_path} ${input_cpin_path}.${input_cpin_path.ext};
        
          ln -f -s ${input_ref_path} ${input_ref_path}.${input_ref_path.ext};
        
        #if $config.sele == "option1":
            ln -s -f ${config.properties} ${config.properties}.${config.properties.ext};
          #end if
        
        pmemd_mdrun

        #if $config.sele == "option1":
            --config ${config.properties}.${config.properties.ext}
          #else if $config.sele == "option2":
            --config '${config.jsonstr}'
          #else if $config.sele == "option3":
            --config "__oc____dq__mdin__dq__:${config.mdin},__dq__pmemd_path__dq__:__dq__${config.pmemd_path}__dq__,__dq__simulation_type__dq__:__dq__${config.simulation_type}__dq__,__dq__mpi_bin__dq__:__dq__${config.mpi_bin}__dq__,__dq__mpi_np__dq__:${config.mpi_np},__dq__mpi_hostlist__dq__:__dq__${config.mpi_hostlist}__dq____cc__"
          #end if
        
          #if str($input_top_path) != 'None':
            --input_top_path ${input_top_path}.${input_top_path.ext}
          #end if
        
          #if str($input_crd_path) != 'None':
            --input_crd_path ${input_crd_path}.${input_crd_path.ext}
          #end if
        
          #if str($input_mdin_path) != 'None':
            --input_mdin_path ${input_mdin_path}.${input_mdin_path.ext}
          #end if
        
          #if str($input_cpin_path) != 'None':
            --input_cpin_path ${input_cpin_path}.${input_cpin_path.ext}
          #end if
        
          #if str($input_ref_path) != 'None':
            --input_ref_path ${input_ref_path}.${input_ref_path.ext}
          #end if
        
        
          --output_log_path $__new_file_path__/$outname_output_log_path
        
          --output_traj_path $__new_file_path__/$outname_output_traj_path
        
          --output_rst_path $__new_file_path__/$outname_output_rst_path
        
          --output_cpout_path $__new_file_path__/$outname_output_cpout_path
        
          --output_cprst_path $__new_file_path__/$outname_output_cprst_path
        
          --output_mdinfo_path $__new_file_path__/$outname_output_mdinfo_path
        ;          
        #if $config.sele == "option1":
            rm -f ${config.properties}.${config.properties.ext};
          #end if
        
          rm -f ${input_top_path}.${input_top_path.ext};
        
          rm -f ${input_crd_path}.${input_crd_path.ext};
        
          rm -f ${input_mdin_path}.${input_mdin_path.ext};
        
          rm -f ${input_cpin_path}.${input_cpin_path.ext};
        
          rm -f ${input_ref_path}.${input_ref_path.ext};
        
        
          if test -f $__new_file_path__/$outname_output_log_path; then mv $__new_file_path__/$outname_output_log_path $output_log_path; fi;
        
          if test -f $__new_file_path__/$outname_output_traj_path; then mv $__new_file_path__/$outname_output_traj_path $output_traj_path; fi;
        
          if test -f $__new_file_path__/$outname_output_rst_path; then mv $__new_file_path__/$outname_output_rst_path $output_rst_path; fi;
        
          if test -f $__new_file_path__/$outname_output_cpout_path; then mv $__new_file_path__/$outname_output_cpout_path $output_cpout_path; fi;
        
          if test -f $__new_file_path__/$outname_output_cprst_path; then mv $__new_file_path__/$outname_output_cprst_path $output_cprst_path; fi;
        
          if test -f $__new_file_path__/$outname_output_mdinfo_path; then mv $__new_file_path__/$outname_output_mdinfo_path $output_mdinfo_path; fi;
        
    ]]>
    </command>
    <inputs>
        
          <param name="input_top_path" type="data" format="top,parmtop,prmtop"  optional="False" label="input TOP,PARMTOP,PRMTOP file" help="Input topology file (AMBER ParmTop). Format: [input].[format]"/> 
        
          <param name="input_crd_path" type="data" format="crd,mdcrd,inpcrd,rst,rst7"  optional="False" label="input CRD,MDCRD,INPCRD,RST,RST7 file" help="Input coordinates file (AMBER crd). Format: [input].[format]"/> 
        
          <param name="input_mdin_path" type="data" format="mdin,in,txt"  optional="True" label="input MDIN,IN,TXT file" help="Input configuration file (MD run options) (AMBER mdin). Format: [input].[format]"/> 
        
          <param name="input_cpin_path" type="data" format="cpin"  optional="True" label="input CPIN file" help="Input constant pH file (AMBER cpin). Format: [input].cpin"/> 
        
          <param name="input_ref_path" type="data" format="crd,mdcrd,inpcrd,rst,rst7"  optional="True" label="input CRD,MDCRD,INPCRD,RST,RST7 file" help="Input reference coordinates for position restraints. Format: [input].[format]"/> 
        
        
          <param name="outname_output_log_path" type="text" value="mypmemd_mdrun.log" optional="False" label="output LOG,OUT,TXT,O name" help="Output log file Format: [output].[format] "/>
        
          <param name="outname_output_traj_path" type="text" value="mypmemd_mdrun.trj" optional="False" label="output TRJ,CRD,MDCRD,X,NETCDF,NC name" help="Output trajectory file Format: [output].[format] "/>
        
          <param name="outname_output_rst_path" type="text" value="mypmemd_mdrun.rst" optional="False" label="output RST,RST7 name" help="Output restart file Format: [output].[format] "/>
        
          <param name="outname_output_cpout_path" type="text" value="mypmemd_mdrun.cpout" optional="True" label="output CPOUT name" help="Output constant pH file (AMBER cpout) Format: [output].cpout "/>
        
          <param name="outname_output_cprst_path" type="text" value="mypmemd_mdrun.cprst" optional="True" label="output CPRST,RST,RST7 name" help="Output constant pH restart file (AMBER rstout) Format: [output].[format] "/>
        
          <param name="outname_output_mdinfo_path" type="text" value="mypmemd_mdrun.mdinfo" optional="True" label="output MDINFO name" help="Output MD info Format: [output].mdinfo "/>
        
        <conditional name="config">
            <param name="sele" type="select" label="Take tool settings:" help="Select where tool settings are to be read from">
                <option value="option1">from configuration file</option>
                <option value="option2">from JSON string</option>
                <option value="option3">manual input</option>
            </param>
            <when value="option1">
                <param name="properties" type="data" format="yml,json" optional="false" label="Configuration file" help="File containing tool settings. See below for the syntax"/>
            </when>
            <when value="option2">
                <param name="jsonstr" type="text" value="{}" optional="false" label="JSON string" help="JSON string containing tool settings. See below for the syntax"/>
            </when>
            <when value="option3">
                
                  <param name="mdin" type="text" label="mdin" help="pmemd MD run options specification. (Used if *input_mdin_path* is None) (Json)" value="{}" />
                
                  <param name="pmemd_path" type="text" label="pmemd_path" help="pmemd binary path to be used." optional="false"
                      value="pmemd"
                    />
                
                  <param name="simulation_type" type="select" label="simulation_type" help="Default options for the mdin file. Each creates a different mdin file. " multiple="">
                    
                      <option value="minimization" 
                      selected="true"
                      >minimization</option>
                    
                      <option value="min_vacuo" 
                      
                      >min_vacuo</option>
                    
                      <option value="NVT" 
                      
                      >NVT</option>
                    
                      <option value="npt" 
                      
                      >npt</option>
                    
                      <option value="free" 
                      
                      >free</option>
                    
                    </param>
                
                  <param name="mpi_bin" type="text" label="mpi_bin" help="Path to the MPI runner. Usually &#34;mpirun&#34; or &#34;srun&#34;." optional="true"
                      
                    />
                
                  <param name="mpi_np" type="integer" 
                      
                      
                           label="mpi_np" help="Number of MPI processes. Usually an integer bigger than 1." optional="true"/>
                
                  <param name="mpi_hostlist" type="text" label="mpi_hostlist" help="Path to the MPI hostlist file." optional="true"
                      
                    />
                
            </when>
        </conditional>
    </inputs>
    <outputs>
        
        <data name="output_log_path" format="log,out,txt,o" label="${outname_output_log_path}"/>
        
        <data name="output_traj_path" format="trj,crd,mdcrd,x,netcdf,nc" label="${outname_output_traj_path}"/>
        
        <data name="output_rst_path" format="rst,rst7" label="${outname_output_rst_path}"/>
        
        <data name="output_cpout_path" format="cpout" label="${outname_output_cpout_path}"/>
        
        <data name="output_cprst_path" format="cprst,rst,rst7" label="${outname_output_cprst_path}"/>
        
        <data name="output_mdinfo_path" format="mdinfo" label="${outname_output_mdinfo_path}"/>
        
    </outputs>
    <tests>
        <test>
        </test>
    </tests>    
    <help>
.. class:: infomark
        
Check the syntax for the tool parameters at the original library documentation: https://biobb_amber.readthedocs.io/en/latest

-----

.. image:: http://mmb.irbbarcelona.org/biobb/assets/layouts/layout3/img/logo.png    
    :width: 150

**https://mmb.irbbarcelona.org/biobb**
        
.. image:: https://bioexcel.eu/wp-content/uploads/2019/08/Bioexcel_logo_no_subheading_660px.png
        :width: 150
        
**https://bioexcel.eu**
   </help>

    <citations>
        <citation type="bibtex">
            @misc{githubbiobb,
            author = {Andrio P, Bayarri, G., Hospital A, Gelpi JL},
            year = {2019-20},
            title = {biobb: BioExcel building blocks },
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/bioexcel/biobb_amber},
            }
        </citation>
        <citation type="doi">10.1038/s41597-019-0177-4</citation>
    </citations>
</tool>