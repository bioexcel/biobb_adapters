<tool id="biobb_pmx_pmxligand_hybrid" name="PmxligandHybrid" version="@TOOL_VERSION@" >
    <description>Wrapper class for the PMX ligand_hybrid module.</description>
    <macros>
      <token name="@TOOL_VERSION@">5.1.0</token>
    </macros>

    <requirements>
      <requirement type="package" version="@TOOL_VERSION@">biobb_pmx</requirement>
    </requirements>

    <command detect_errors="exit_code"><![CDATA[
      
      ln -s $input_structure1_path ./input_structure1_path.$input_structure1_path.ext;
      ln -s $input_structure2_path ./input_structure2_path.$input_structure2_path.ext;
      ln -s $input_topology1_path ./input_topology1_path.$input_topology1_path.ext;
      ln -s $input_topology2_path ./input_topology2_path.$input_topology2_path.ext;
      #if $input_pairs_path:
        ln -s $input_pairs_path ./input_pairs_path.$input_pairs_path.ext;
      #end if
      #if $input_scaffold1_path:
        ln -s $input_scaffold1_path ./input_scaffold1_path.$input_scaffold1_path.ext;
      #end if
      #if $input_scaffold2_path:
        ln -s $input_scaffold2_path ./input_scaffold2_path.$input_scaffold2_path.ext;
      #end if
      #if $config_json:
        ln -s $config_json ./config_json.$config_json.ext;
      #end if

      pmxligand_hybrid

      #if $config_json:
        --config ./config_json.$config_json.ext
      #end if
      
      --input_structure1_path ./input_structure1_path.$input_structure1_path.ext
      --input_structure2_path ./input_structure2_path.$input_structure2_path.ext
      --input_topology1_path ./input_topology1_path.$input_topology1_path.ext
      --input_topology2_path ./input_topology2_path.$input_topology2_path.ext
      #if $input_pairs_path:
        --input_pairs_path ./input_pairs_path.$input_pairs_path.ext
      #end if
      #if $input_scaffold1_path:
        --input_scaffold1_path ./input_scaffold1_path.$input_scaffold1_path.ext
      #end if
      #if $input_scaffold2_path:
        --input_scaffold2_path ./input_scaffold2_path.$input_scaffold2_path.ext
      #end if
      --output_log_path $outname_output_log_path
      --output_structure1_path $outname_output_structure1_path
      --output_structure2_path $outname_output_structure2_path
      --output_topology_path $outname_output_topology_path
      --output_atomtypes_path $outname_output_atomtypes_path
      ;
      
      mv $outname_output_log_path $output_log_path;
      mv $outname_output_structure1_path $output_structure1_path;
      mv $outname_output_structure2_path $output_structure2_path;
      mv $outname_output_topology_path $output_topology_path;
      mv $outname_output_atomtypes_path $output_atomtypes_path;
      ]]>
    </command>

    <inputs>
      <param name="input_structure1_path" type="data" format="pdb" optional="false" help="Path to the input ligand structure file 1"/>
      <param name="input_structure2_path" type="data" format="pdb" optional="false" help="Path to the input ligand structure file 2"/>
      <param name="input_topology1_path" type="data" format="itp" optional="false" help="Path to the input ligand topology file 1"/>
      <param name="input_topology2_path" type="data" format="itp" optional="false" help="Path to the input ligand topology file 2"/>
      <param name="input_pairs_path" type="data" format="dat" optional="true" help="Path to the input atom pair mapping"/>
      <param name="input_scaffold1_path" type="data" format="ndx" optional="true" help="Path to the index of atoms to consider for the ligand structure 1"/>
      <param name="input_scaffold2_path" type="data" format="ndx" optional="true" help="Path to the index of atoms to consider for the ligand structure 2"/>
      <param name="outname_output_log_path" type="text" optional="false" help="Path to the log file"/>
      <param name="outname_output_structure1_path" type="text" optional="false" help="Path to the output hybrid structure based on the ligand 1"/>
      <param name="outname_output_structure2_path" type="text" optional="false" help="Path to the output hybrid structure based on the ligand 2"/>
      <param name="outname_output_topology_path" type="text" optional="false" help="Path to the output hybrid topology"/>
      <param name="outname_output_atomtypes_path" type="text" optional="false" help="Path to the atom types for the output hybrid topology"/>
      <param name="config_json" type="data" format="json" optional="true" label="Configuration file" help="File containing tool settings. See below for the syntax"/>
    </inputs>

    <outputs>
      <data name="output_log_path" format="log" />
      <data name="output_structure1_path" format="pdb" />
      <data name="output_structure2_path" format="pdb" />
      <data name="output_topology_path" format="itp" />
      <data name="output_atomtypes_path" format="itp" />
    </outputs>

    <tests>
        <test>
          <param name="config_json" value="config_pmxligand_hybrid.json" ftype="json" />
          <param name="input_structure1_path" value="lig1.pdb" ftype="pdb" />
          <param name="input_structure2_path" value="lig2.pdb" ftype="pdb" />
          <param name="input_topology1_path" value="topoLig1.itp" ftype="itp" />
          <param name="input_topology2_path" value="topoLig2.itp" ftype="itp" />
          <param name="input_pairs_path" value="myPairs1.dat" ftype="dat" />
          <param name="outname_output_log_path" value="ligand_hybrid.log" />
          <param name="outname_output_structure1_path" value="hybridStruct1.pdb" />
          <param name="outname_output_structure2_path" value="hybridStruct2.pdb" />
          <param name="outname_output_topology_path" value="hybridTopo.itp" />
          <param name="outname_output_atomtypes_path" value="hybridAtomTypes.itp" />
          <output name="output_structure1_path" ftype="pdb">
            <assert_contents>
              <has_size value="3123" delta="780"/>
            </assert_contents>
          </output>
          <output name="output_structure2_path" ftype="pdb">
            <assert_contents>
              <has_size value="3123" delta="780"/>
            </assert_contents>
          </output>
          <output name="output_topology_path" ftype="itp">
            <assert_contents>
              <has_size value="39468" delta="9867"/>
            </assert_contents>
          </output>
          <output name="output_atomtypes_path" ftype="itp">
            <assert_contents>
              <has_size value="274" delta="68"/>
            </assert_contents>
          </output>
        </test>
    </tests>

    <help>
.. class:: infomark

Check the syntax for the tool parameters at the original library documentation: https://biobb-pmx.readthedocs.io/en/latest

-----

.. image:: http://mmb.irbbarcelona.org/biobb/assets/layouts/layout3/img/logo.png
    :width: 150

**https://mmb.irbbarcelona.org/biobb**

.. image:: https://bioexcel.eu/wp-content/uploads/2019/08/Bioexcel_logo_no_subheading_660px.png
        :width: 150

**https://bioexcel.eu**
   </help>

    <citations>
        <citation type="bibtex">
            @misc{githubbiobb,
            author = {Andrio P, Bayarri, G., Hospital A, Gelpi JL},
            year = {2019-21},
            title = {biobb: BioExcel building blocks },
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/bioexcel/biobb_pytorch},
            }
        </citation>
        <citation type="doi">10.1038/s41597-019-0177-4</citation>
    </citations>
</tool>