<tool id="biobb_vs_bindingsite_ext" name="bindingsite" version="3.0.0" >
    <description>: Finds the binding site of the input_pdb file based on the ligands&#39; location of similar structures (members of the sequence identity cluster)</description>
    <requirements>
        <requirement type="binary">docker</requirement>
    </requirements>
    <command detect_errors="aggressive">
        
        ln -f -s ${input_pdb_path} ${input_pdb_path}.${input_pdb_path.ext};
        
        ln -f -s ${input_clusters_zip} ${input_clusters_zip}.${input_clusters_zip.ext};
        
        #if $config.sele == "option1":
        ln -s -f ${config.properties} ${config.properties}.${config.properties.ext};
        #end if
        docker run --rm -v $__root_dir__/database/files:$__root_dir__/database/files quay.io/biocontainers/biobb_vs:3.0.0--py_0 bindingsite
        #if $config.sele == "option1":
        --config ${config.properties}.${config.properties.ext}
        #else if $config.sele == "option2":
        --config ${config.jsonstr}
        #else if $config.sele == "option4":
        --config "__oc____dq__ligand__dq__:__dq__${config.ligand}__dq__,__dq__radius__dq__:__dq__${config.radius}__dq__,__dq__max_num_ligands__dq__:__dq__${config.max_num_ligands}__dq__,__dq__matrix_name__dq__:__dq__${config.matrix_name}__dq__,__dq__gap_open__dq__:__dq__${config.gap_open}__dq__,__dq__gap_extend__dq__:__dq__${config.gap_extend}__dq____cc__"
        #end if
        
        --input_pdb_path ${input_pdb_path}.${input_pdb_path.ext}
        
        --input_clusters_zip ${input_clusters_zip}.${input_clusters_zip.ext}
        
        
        --output_pdb_path $__root_dir__/database/files/000/$outname_output_pdb_path
        ;          
        #if $config.sele == "option1":
        rm -f ${config.properties}.${config.properties.ext};
        #end if
        
        rm -f ${input_pdb_path}.${input_pdb_path.ext};
        
        rm -f ${input_clusters_zip}.${input_clusters_zip.ext};
        
        
        if test -f $__root_dir__/database/files/000/$outname_output_pdb_path; then mv $__root_dir__/database/files/000/$outname_output_pdb_path $output_pdb_path; fi;
        
    </command>
    <inputs>
        
        <param name="input_pdb_path" type="data" format="pdb"  optional="False" label="input PDB file" help="Path to the PDB structure where the binding site is to be found. Format: [input].pdb"/> 
        
        <param name="input_clusters_zip" type="data" format="zip"  optional="False" label="input ZIP file" help="Path to the ZIP file with all the PDB members of the identity cluster. Format: [input].zip"/> 
        
        
        <param 
            name="outname_output_pdb_path" type="text" value="mybindingsite.pdb" optional="False" label="output PDB name" help="Path to the PDB containig the residues belonging to the binding site Format: [output].pdb "/>
        
        <conditional name="config">
            <param name="sele" type="select" label="Take tool settings:" help="Select where tool settings are to be read from">
                <option value="option1">from configuration file</option>
                <option value="option2">from JSON string</option>
                <option value="option3" selected="true">by default</option>
                <option value="option4">Manual input</option>
            </param>
            <when value="option1">
                <param name="properties" type="data" format="yml,json" optional="false" label="Configuration file" help="File containing tool settings. See below for the syntax"/>
            </when>
            <when value="option2">
                <param name="jsonstr" type="text" value="{}" optional="false" label="JSON string" help="JSON string containing tool settings. See below for the syntax"/>
            </when>
            <when value="option3">
            </when>
            <when value="option4">
                
                <param name="ligand" type="text" value="None" label="ligand" help="Ligand to be found in the protein structure. If no ligand provided, no action will be executed." />
            
                <param name="radius" type="text" value="5.0" min="" max="" label="radius" help="around ligand atoms to consider a protein atom as a binding site atom." />
            
                
            
                <param name="matrix_name" type="text" value="&#39;blosum62&#39;" label="matrix_name" help="Substitution matrices for use in alignments." />
            
                <param name="gap_open" type="text" value="-10.0" min="" max="" label="gap_open" help="Gap open penalty." />
            
                <param name="gap_extend" type="text" value="-0.5" min="" max="" label="gap_extend" help="Gap extend penalty." />
            
            </when>
        </conditional>
    </inputs>
    <outputs>
        
        <data name="output_pdb_path" format="pdb" label="${outname_output_pdb_path}"/>
        
    </outputs>
    <tests>
        <test>
        </test>
    </tests>    
    <help>
.. class:: infomark
        
Check the syntax for the tool parameters at the original library documentation: https://biobb_vs.readthedocs.io/en/latest

-----

.. image:: http://mmb.irbbarcelona.org/biobb/assets/layouts/layout3/img/logo.png    
    :width: 150

**https://mmb.irbbarcelona.org/biobb**
        
.. image:: https://bioexcel.eu/wp-content/uploads/2019/08/Bioexcel_logo_no_subheading_660px.png
        :width: 150
        
**https://bioexcel.eu**
   </help>

    <citations>
        <citation type="bibtex">
            @misc{githubbiobb,
            author = {Andrio P, Bayarri, G., Hospital A, Gelpi JL},
            year = {2019-20},
            title = {biobb: BioExcel building blocks },
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/bioexcel/biobb_vs},
            }
        </citation>
        <citation type="doi">10.1038/s41597-019-0177-4</citation>
    </citations>
</tool>